# Sun based automations

- alias: 'Sundown Message'
  trigger:
    platform: sun
    event: sunset
  condition:
    condition: state
    entity_id: input_boolean.sundown_switch
    state: 'on'
  action:
    service: notify.ecobee
    data:
      message: 'The sun has set Robert. Have a good evening.'

- alias: 'Landscape Lights'
  trigger:
    platform: sun
    event: sunset
    offset: 00:01:45
  action:
    service: light.turn_on
    entity_id: light.landscape


- alias: 'Sunrise message'
  trigger:
    platform: sun
    event: sunrise
  condition:
    condition: state
    entity_id: input_boolean.sunup_switch
    state: 'on'
  action:
    service: notify.ecobee
    data:
      message: 'The sun is up Robert. Hope you have a good day'

# Alarm based automations
- alias: 'Armed away'
  trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_entry
      state: 'on'
    - platform: state
      entity_id: binary_sensor.side_door
      state: 'on'
    - platform: state
      entity_id: binary_sensor.office_motion
      state: 'on'
    - platform: state
      entity_id: binary_sensor.tearoom_motion
      state: 'on'
    - platform: state
      entity_id: binary_sensor.second_floor_motion
      state: 'on'
    - platform: state
      entity_id: binary_sensor.tea_room_slider
      state: 'on'
    - platform: state
      entity_id: binary_sensor.dining_room_1
      state: 'on'
    - platform: state
      entity_id: binary_sensor.dining_room_2
      state: 'on'
    - platform: state
      entity_id: binary_sensor.tea_room_slider
      state: 'on'
  condition:
    condition: state
    entity_id: alarm_control_panel.ha_alarm
    state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.ha_alarm
    - service: notify.pushbullet
      data:
        message: 'Robert, the alarm has been triggered while you were away.'

- alias: 'Armed home'
  trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_entry
      state: 'on'
    - platform: state
      entity_id: binary_sensor.side_door
      state: 'on'
    - platform: state
      entity_id: binary_sensor.second_floor_motion
      state: 'on'
    - platform: state
      entity_id: binary_sensor.tearoom_motion
      state: 'on'
    - platform: state
      entity_id: binary_sensor.office_motion
      state: 'on'
    - platform: state
      entity_id: binary_sensor.tea_room_slider
    - platform: state
      entity_id: binary_sensor.dining_room_1
      state: 'on'
    - platform: state
      entity_id: binary_sensor.dining_room_2
      state: 'on'
    - platform: state
      entity_id: binary_sensor.tea_room_slider
      state: 'on'
  condition:
    condition: state
    entity_id: alarm_control_panel.ha_alarm
    state: armed_home
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.ha_alarm
    - service: notify.pushbullet
      data:
        message: 'Robert, the alarm has been triggered.'

# MQTT/Harmony
- alias: 'Theater Lights'
  trigger:
    - platform: state
      entity_id: switch.watch_tv
      state: 'on'
    - platform: state
      entity_id: switch.firetvplex
      state: 'on'
    - platform: state
      entity_id: switch.chromecast
      state: 'on'
    - platform: state
      entity_id: switch.bluray
      state: 'on'
  condition:
    condition: sun
    after: sunset
    after_offset: "-00:45:00"
  action:
    - service: scene.turn_on
      entity_id: scene.sunset
    - delay: 00:01:30
    - service: scene.turn_on
      entity_id: scene.sunset_dimmed

# Washer Notification Sequence

- alias: 'Washer Start'
  trigger:
    platform: state
    entity_id: sensor.washer_pwrdn
    from: 'True'
    to: 'False'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.washer_switch

- alias: 'Washer Done'
  trigger:
    platform: state
    entity_id: sensor.washer_pwrdn
    from: 'False'
    to: 'True'
    for:
      minutes: 3
  condition:
      condition: state
      entity_id: input_boolean.washer_switch
      state: 'on'
  action:
    - service: notify.pushbullet
      data:
        message: 'Robert, the washer is done.'
    - service: input_boolean.turn_off
      entity_id: input_boolean.washer_switch

# Dryer Notification Sequence

- alias: 'Dryer Start'
  trigger:
    platform: state
    entity_id: sensor.dryer_pwrup
    from: 'False'
    to: 'True'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.dryer_switch

- alias: 'Dryer Done'
  trigger:
    platform: state
    entity_id: sensor.aeotec_smart_switch_6_power_11_8
    state: '0.0'
  condition:
    condition: state
    entity_id: input_boolean.dryer_switch
    state: 'on'
  action:
    - service: notify.pushbullet
      data:
        message: 'Robert, the dryer is done.'
    - service: input_boolean.turn_off
      entity_id: input_boolean.dryer_switch

# Idiot Alert - If doors are open and I leave, remind me

- alias: 'Door Minder'
  trigger:
    platform: state
    entity_id: device_tracker.rpitera_rpitera
    from: 'home'
    to: 'not_home'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: binary_sensor.front_door
        state: 'on'
      - condition: state
        entity_id: binary_sensor.side_door
        state: 'on'
  action:
    service: notify.pushbullet
    data_template:
      message: >
        Robert, you left one of the entry doors open. Front Door is {{ states.binary_sensor.front_door.state }}.  Side Door is {{ states.binary_sensor.side_door.state }}.

# Wink outages

- alias: 'Wink troubles'
  trigger:
    platform: state
    entity_id: sensor.wink_core_api
    from: "Operational"
  action:
    service: notify.pushbullet
    data_template:
      message: >
        Wink core API {{ states.sensor.wink_core_api.state }}.


# You've got mail!  (Conditional alerts for home/away)

- alias: 'Mail Alert Home'
  trigger:
    platform: state
    entity_id: binary_sensor.mailbox
    from: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mailbox_switch
        state: 'off'
      - condition: state
        entity_id: device_tracker.rpitera_rpitera
        state: 'home'
  action:
    - service: tts.google_say
      entity_id: media_player.living_room_home
      data:
        message: 'Pardon the interruption, but the mail has been delivered Robert.'
    - service: input_boolean.turn_on
      entity_id: input_boolean.mailbox_switch

- alias: 'Mail Alert Away'
  trigger:
    platform: state
    entity_id: binary_sensor.mailbox
    from: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mailbox_switch
        state: 'off'
      - condition: state
        entity_id: device_tracker.rpitera_rpitera
        state: 'not_home'
  action:
    - service: notify.pushbullet
      data:
        message: 'Mail has been delivered, Robert.'
    - service: input_boolean.turn_on
      entity_id: input_boolean.mailbox_switch

# But don't notify me when I open the box to retrieve it!

- alias: 'Mail Retrieval'
  trigger:
    platform: state
    entity_id: binary_sensor.mailbox
    from: 'off'
  condition:
    condition: state
    entity_id: input_boolean.mailbox_switch
    state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.mailbox_switch


# Rain Alert

- alias: 'Raining'
  trigger:
    platform: state
    entity_id: sensor.dark_sky_precip
    from: '0'
  action:
    - service: tts.google_say
      data_template:
        message: 'Excuse me Robert, but is currently {{ states.sensor.dark_sky_precip.state }}ing and it is {{ states.sensor.dark_sky_temperature.state | int }}degrees outside.  Forecast says {{ states.sensor.dark_sky_minutely_summary.state }}.'
        cache: false
    - service: automation.turn_off
      entity_id: automation.raining
    - delay: 00:30:00
    - service: automation.turn_on
      entity_id: automation.raining


# Garage Door Light
- alias: 'Garage Light'
  trigger:
    platform: state
    entity_id: binary_sensor.vision_zg8101_garage_door_detector_sensor_12_0
    state: 'on'
  condition:
    condition: sun
    after: sunset
    after_offset: "-01:00:00"
  action:
    - service: light.turn_on
      entity_id: light.garage
    - delay: 00:02:30
    - service: light.turn_off
      entity_id: light.garage



# Group Visibility tests

#- alias: 'WX Warning Hide'
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.pws_alerts
#    below: 1
#  action:
#    service: group.set_visibility
#    entity_id: group.pws_alerts
#    data:
#      visible: False

#- alias: 'WX Warning Show'
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.pws_alerts
#    above: 1
#  action:
#    service: group.set_visibility
#    entity_id: group.pws_alerts
#    data:
#      visible: True