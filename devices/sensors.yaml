####################################################
#                                                  #
#                     Sensors                      #
#                                                  #
####################################################

#
#
# Weather (darksky.io)
#
-  platform: darksky
   api_key: !secret forecast_io_api_key
   update_interval: 300
   monitored_conditions:
     - summary
     - icon
     - nearest_storm_distance
     - precip_type
     - precip_intensity
     - precip_probability
     - temperature
     - apparent_temperature
     - dew_point
     - wind_speed
     - wind_bearing
     - cloud_cover
     - humidity
     - pressure
     - visibility
     - ozone

#
#
# WeatherUnderground 
#
-  platform: wunderground
   api_key: !secret wunderground_api_key
   pws_id: KNJSCOTC5
   monitored_conditions:
      - weather
      - temp_f
      - station_id
      - elevation
      - location
      - observation_time
      - feelslike_f
      - feelslike_string
      - heat_index_f
      - heat_index_string
      - dewpoint_f
      - dewpoint_string
      - wind_mph
      - UV
      - pressure_in
      - pressure_mb
      - pressure_trend
      - wind_dir
      - wind_degrees
      - wind_string
      - relative_humidity
      - visibility_mi
      - precip_1hr_in
      - precip_today_in
      - precip_today_string
      - solarradiation
      - alerts
      - weather_1d
      - weather_1n
      - weather_2d
      - weather_2n
      - weather_3d
      - weather_3n
      - weather_4d
      - weather_4n
      - weather_1h
      - weather_6h


#
#
#  Moon phase sensor
#
#
- platform: moon

#
#
#  Weather Statistical Sensors
#
#
-  platform: statistics
   name: Temperature Stats
   entity_id: sensor.pws_temp_f


#
# Internet (Speedtest)
#

-  platform: speedtest
   minute: 30
   hour:
     - 0
     - 6
     - 12
     - 18
   monitored_conditions:
     - ping
     - download
     - upload

#
# System sensors
#

-  platform: cpuspeed
   name: CPU

-  platform: systemmonitor
   resources:
     - type: memory_free
     - type: memory_use_percent
     - type: processor_use
     - type: last_boot
     - type: since_last_boot

-  platform: command_line
   command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
   name: Current HA Version

-  platform: command_line
   name: Installed version
   command: "/srv/hass/hass_venv/bin/hass --version"

-  platform: command_line
   name: SSL Cert Expiration
   unit_of_measurement: days
   scan_interval: 10800
   command: "ssl-cert-check -b -c /etc/letsencrypt/live/westofeast.no-ip.org/cert.pem | awk '{ print $NF }'"


-  platform: glances
   name: RP1
   host: 192.168.1.181
   port: 61208
   resources:
     - 'disk_use_percent'
     - 'disk_use'
     - 'disk_free'
     - 'memory_use_percent'
     - 'memory_use'
     - 'memory_free'
     - 'swap_use_percent'
     - 'swap_use'
     - 'swap_free'
     - 'processor_load'
     - 'process_running'
     - 'process_total'
     - 'process_thread'
     - 'process_sleeping'
#
#
#
-  platform: nest
   monitored_conditions:
     - 'co_status'
     - 'smoke_status'
#
#
#
-  platform: google_travel_time
   name: EWR Travel Time
   api_key: !secret google_maps_api_key
   origin: 40.65894, -74.39036
   destination: 40.690260, -74.174455
   options:
     mode: driving

-  platform: google_travel_time
   name: Westfield Travel Time
   api_key: !secret google_maps_api_key
   origin: 40.65894, -74.39036
   destination: 40.652382, -74.349891
   options:
     mode: driving

-  platform: google_travel_time
   name: Garwood Travel Time
   api_key: !secret google_maps_api_key
   origin: 40.65894, -74.39036
   destination: 40.652462, -74.331076
   options:
     mode: driving


-  platform: google_travel_time
   name: Bound Brook Travel Time
   api_key: !secret google_maps_api_key
   origin: 40.65894, -74.39036
   destination: 40.574260, -74.553277
   options:
     mode: driving

-  platform: google_travel_time
   name: Bridgewater Area Travel Time
   api_key: !secret google_maps_api_key
   origin: 40.65894, -74.39036
   destination: 40.578835, -74.628694
   options:
     mode: driving

-  platform: google_travel_time
   name: Sandy Hook Travel Time
   api_key: !secret google_maps_api_key
   origin: 40.65894, -74.39036
   destination: 40.46044, -73.99323
   options:
     mode: driving

-  platform: google_travel_time
   name: Wilson Borough Travel Time
   api_key: !secret google_maps_api_key
   origin: 40.65894, -74.39036
   destination: 40.677898, -75.243573
   options:
     mode: driving

-  platform: google_travel_time
   name: Poconos Travel Time
   api_key: !secret google_maps_api_key
   origin: 40.65894, -74.39036
   destination: 40.821860, -75.649590
   options:
     mode: driving


#
#
#  Plex Activity Monitor
#
#

-  platform: plex
   host: 192.168.1.195
   name: Nirvana

#
#
#  SNMP Monitor
#
#

-  platform: snmp
   host: 192.168.1.152
   name: zen_snmp
   baseoid: 1.3.6.1.2.1.1.5.0

-  platform: snmp
   host: 192.168.1.170
   name: satori_snmp
   baseoid: 1.3.6.1.2.1.1.5.0


#
#
#  MQTT Sensors
#
#

- platform: mqtt
  state_topic: 'owntracks/rpitera/rpitera'
  name: 'Droid Battery'
  unit_of_measurement: '%'
  value_template: '{{ value_json.batt }}'

#
#
#  Air Quality Index
#
#

- platform: waqi
  token: !secret waqi_token
  locations:
    - Rahway

#
#
# Ring Doorbell 
#

- platform: ring
  entity_namespace: 'ring'
  monitored_conditions:
    - battery
    - last_activity
    - last_ding
    #- last_motion
    - volume

- platform: crimereports
  name: Local Crime Reports
  radius: 750

- platform: octoprint
  name: OctoPrint
  monitored_conditions:
    - Current State
    - Temperatures
    - Job Percentage




####################################################
#                                                  #
#               Template Sensors                   #
#                                                  #
####################################################



#
# Sensor Value Templating
#
#
-  platform: template
   sensors:
     epsonprinter:
       value_template: "{% if is_state('device_tracker.epson25e37cfiosrouterhome', 'home') %}on{% else %}off{% endif %}"
     brotherprinter:
       value_template: "{% if is_state('device_tracker.19216819', 'home') %}on{% else %}off{% endif %}"
     satori:
       value_template: "{% if is_state('sensor.satori_snmp', 'SATORI') %}System Up{% else %}System Offline{% endif %}"
     nirvana:
       value_template: "{% if is_state('device_tracker.1921681195', 'home') %}System Up{% else %}System Offline{% endif %}"
     zen:
       value_template: "{% if is_state('sensor.zen_snmp', 'ZEN') %}System Up{% else %}System Offline{% endif %}"
     acurite_wx:
       value_template: "{% if is_state('device_tracker.acurite', 'home') %}transmitting{% else %}down{% endif %}"
     ex3700:
       value_template: "{% if is_state('device_tracker.ex3700fiosrouterhome', 'home') %}TX/RX Up{% else %}down{% endif %}"

#
#   Fusion Fuel Level
#
     fusion_fuel:
       unit_of_measurement: "%"
       value_template: '{{ states.device_tracker.ford_fusion.attributes.fuel_level }}'


#
#   Automation Templates
#
#    True when washer power level is below 3.4 watts, high threshold of resting state
#    Default state is true
     washer_pwrup:
       value_template: "{{ states('sensor.aeotec_smart_switch_6_power_10_8') | int > 3.4 }}"
       

#    True when Dryer power level is above 8.4 watts, showing dryer is in operation (as opposed to just having the door open)
#    Default state is false
     dryer_pwrup:
       value_template: "{{ states('sensor.aeotec_smart_switch_6_power_11_8') | int > 8.4 }}"
       
#
#
#   Average Home Temp
#
#
     average_main_temp:
       friendly_name: 'Average Main Floor Temp'
       unit_of_measurement: "°F"
       value_template: >-
         {{ ((float(states.sensor.aeotec_multisensor_6_temperature_7_1.state) + float(states.sensor.aeotec_multisensor_6_temperature_8_1.state) + float(states.sensor.main_floor_temperature.state) + float(states.sensor.office_temperature.state)) / 4) | round(1) }}

     average_upstairs_temp:
       friendly_name: 'Average Second Floor Temp'
       unit_of_measurement: "°F"
       value_template: >-
         {{ ((float(states.sensor.upstairs_temperature.state) + float(states.sensor.second_floor_temperature.state)) / 2) | round(1) }}

#
#
#  Event Calendar Sensors
#
#
     event_title:
       friendly_name: 'Next Event'
       value_template: "{{ states.calendar.rpiteraphonegmailcom.attributes.message }}"

     event_description:
       friendly_name: 'Description'
       value_template: "{{ states.calendar.rpiteraphonegmailcom.attributes.description }}"

     event_allday:
       friendly_name: 'All Day?'
       value_template: "{{ states.calendar.rpiteraphonegmailcom.attributes.all_day }}"

     event_start:
       friendly_name: 'Event Time'
       value_template: "{{ as_timestamp(states.calendar.rpiteraphonegmailcom.attributes.start_time) | timestamp_custom('%D %-I:%M %P') }}"

     event_end:
       friendly_name: 'Event Time'
       value_template: "{{ as_timestamp(states.calendar.rpiteraphonegmailcom.attributes.end_time) | timestamp_custom('%D %-I:%M %P') }}"


#
#
#  ecobee3 Mode Sensors
#
#
     operating_mode:
       friendly_name: 'Current Operation'
       value_template: "{{ states.climate.main_floor.attributes.operation }}"

#
#
#  Harmony Activity Sensor
#
#
     current_activity:
       friendly_name: 'Current Activity LR'
       value_template: "{{ states.remote.living_room.attributes.current_activity }}"
     
     current_activity_br:
       friendly_name: 'Current Activity BR'
       value_template: "{{ states.remote.bedroom.attributes.current_activity }}"


#
#
#  Almanac Sensors
#
#

     nextsunrise:
       friendly_name: 'Next Sunrise'
       value_template: "{{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom('%D %-I:%M %P') }}"

     nextsunset:
       friendly_name: 'Next Sunset'
       value_template: "{{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom('%D %-I:%M %P') }}"
       
     dayofyear:
       friendly_name: 'Day Number'
       value_template: "{{ now().strftime('%j') }}"

     weekofyear:
       friendly_name: 'Week Number'
       value_template: "{{ now().strftime('%U') }}"

#
#
#  OctoPrint Sensor conversions
#
#

     hotend:
       friendly_name: 'Hotend Actual'
       value_template: "{{ ((states.sensor.octoprint_actual_tool0_temp.state | float-32) | float*(5/9)) | round(2) }} °C"
       
     bed:
       friendly_name: 'Bed Actual'
       value_template: "{{ ((states.sensor.octoprint_actual_bed_temp.state | float-32) | float*(5/9)) | round(2) }} °C"
       

     hotend_target:
       friendly_name: 'Hotend Target'
       value_template: "{{ ((states.sensor.octoprint_target_tool0_temp.state | float-32) | float*(5/9)) | round(2) }} °C"
       
     bed_target:
       friendly_name: 'Bed Target'
       value_template: "{{ ((states.sensor.octoprint_target_bed_temp.state | float-32) | float*(5/9)) | round(2) }} °C"
       
       
#
#
#  Android IP Webcam Sensor conversions
#
#

     webcam_ambient_temp:
       friendly_name: Webcam Ambient Temperature
       unit_of_measurement: "°F"
       value_template: "{{ (float(states.sensor.webcam_battery_temperature.state) * 1.8 + 32) | round(2) }}"

     webcam_pressure_inches:
       friendly_name: Webcam Pressure Inches
       unit_of_measurement: "inches"
       value_template: "{{ (float(states.sensor.webcam_pressure.state) * 0.0295301) | round(2) }}"

#
#
#  Ring Sensor last updates
#
#

     ring_last_ding:
       friendly_name: Last Ding Time
       value_template: "{{ as_timestamp(states.sensor.ring_doorbell_last_ding.attributes.created_at) |  timestamp_custom('%D %-I:%M %P') }}" 
  
     ring_last_activity:
       friendly_name: Last Activity Time
       value_template: "{{ as_timestamp(states.sensor.ring_doorbell_last_activity.attributes.created_at) |  timestamp_custom('%D %-I:%M %P') }}" 
  
     # ring_last_motion:
     #   friendly_name: Last Motion Time
     #   value_template: "{{ as_timestamp(states.sensor.ring_doorbell_last_motion.attributes.created_at) |  timestamp_custom('%D %-I:%M %P') }}"
  


#
#
#  Battery level template sensors
#
#

     front_entry_battery:
       value_template: "{{ states.binary_sensor.front_entry_opened.attributes.battery_level }}"
       friendly_name: "Front Entry Sensor Battery"
       entity_id: binary_sensor.front_entry_opened
       unit_of_measurement: '%'

     kitchen_entry_battery:
       value_template: "{{ states.binary_sensor.kitchen_entry_opened.attributes.battery_level }}"
       friendly_name: "Kitchen Entry Sensor Battery"
       entity_id: binary_sensor.kitchen_entry_opened
       unit_of_measurement: '%'

     side_entry_battery:
       value_template: "{{ states.binary_sensor.side_entry_opened.attributes.battery_level }}"
       friendly_name: "Side Entry Sensor Battery"
       entity_id: binary_sensor.side_entry_opened
       unit_of_measurement: '%'

     tea_room_slider_battery:
       value_template: "{{ states.binary_sensor.tea_room_slider_opened.attributes.battery_level }}"
       friendly_name: "Tea Room Slider Sensor Battery"
       entity_id: binary_sensor.tea_room_slider_opened
       unit_of_measurement: '%'

     dining_room_1_battery:
       value_template: "{{ states.binary_sensor.dining_room_1_opened.attributes.battery_level }}"
       friendly_name: "Dining Room Window 1 Sensor Battery"
       entity_id: binary_sensor.dining_room_1_opened
       unit_of_measurement: '%'

     dining_room_2_battery:
       value_template: "{{ states.binary_sensor.dining_room_2_opened.attributes.battery_level }}"
       friendly_name: "Dining Room Window 2 Sensor Battery"
       entity_id: binary_sensor.dining_room_2_opened
       unit_of_measurement: '%'

     mailbox_battery:
       value_template: "{{ states.binary_sensor.mailbox_opened.attributes.battery_level }}"
       friendly_name: "Mailbox Sensor Battery"
       entity_id: binary_sensor.mailbox_opened
       unit_of_measurement: '%'

     office_motion_battery:
       value_template: "{{ states.binary_sensor.office_motion.attributes.battery_level }}"
       friendly_name: "Office Sensor Battery"
       entity_id: binary_sensor.office_motion
       unit_of_measurement: '%'

     tearoom_motion_battery:
       value_template: "{{ states.binary_sensor.tearoom_motion.attributes.battery_level }}"
       friendly_name: "Tea Room Sensor Battery"
       entity_id: binary_sensor.tearoom_motion
       unit_of_measurement: '%'

     second_floor_motion_battery:
       value_template: "{{ states.binary_sensor.second_floor_motion.attributes.battery_level }}"
       friendly_name: "Second Floor Sensor Battery"
       entity_id: binary_sensor.second_floor_motion
       unit_of_measurement: '%'

     siren_battery:
       value_template: "{{ states.switch.siren__strobe.attributes.battery_level }}"
       friendly_name: "Siren/Strobe Battery"
       entity_id: switch.siren__strobe
       unit_of_measurement: '%'

     garagedoor_battery:
       value_template: "{{ states.zwave.vision_zg8101_garage_door_detector_12.attributes.battery_level }}"
       friendly_name: "Garage Door Sensor Battery"
       entity_id: zwave.vision_zg8101_garage_door_detector_12
       unit_of_measurement: '%'







####################################################
#                                                  #
#               Disabled Sensors                   #
#                                                  #
####################################################


#
#  Scraper Sensors
#
#
#-  platform: scrape
#   resource: http://status.winkapp.com/
#   name: Overall Wink Status
#   select: "span:nth-of-type(5)"
#-  platform: scrape
#   resource: http://status.winkapp.com/
#   name: Wink.com
#   select: "span:nth-of-type(9)"
#-  platform: scrape
#   resource: http://status.winkapp.com/
#   name: Wink core API
#   select: "span:nth-of-type(13)"
#-  platform: scrape
#   resource: http://status.winkapp.com/
#   name: Wink hub API
#   select: "span:nth-of-type(16)"
#-  platform: scrape
#   resource: http://status.winkapp.com/
#   name: Nest integration
#   select: "span:nth-of-type(19)"
#-  platform: scrape
#   resource: http://status.winkapp.com/
#   name: TCP integration
#   select: "span:nth-of-type(22)"
#-  platform: scrape
#   resource: http://status.winkapp.com/
#   name: Echo integration
#   select: "span:nth-of-type(34)"    